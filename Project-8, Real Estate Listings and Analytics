# Project8: Real Estate Listings and Analytics
# Using MySQL Workbench for creating Database 'realestate_db' and tables Properties, Agents, Buyers and Transactions.



CREATE DATABASE realestate_db;
USE realestate_db;

-- 1. Agents Table
CREATE TABLE Agents (
    agent_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    phone VARCHAR(15)
);

-- Properties Table
CREATE TABLE Properties (
    property_id INT AUTO_INCREMENT PRIMARY KEY,
    address VARCHAR(255) NOT NULL,
    city VARCHAR(100),
    region VARCHAR(100),
    property_type ENUM('Apartment','House','Land','Commercial') NOT NULL,
    listed_price DECIMAL(12,2) NOT NULL,
    listed_date DATE NOT NULL,
    agent_id INT,
    FOREIGN KEY (agent_id) REFERENCES Agents(agent_id)
);

-- Buyers Table
CREATE TABLE Buyers (
    buyer_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    phone VARCHAR(15)
);

-- Transactions Table
CREATE TABLE Transactions (
    transaction_id INT AUTO_INCREMENT PRIMARY KEY,
    property_id INT,
    buyer_id INT,
    transaction_price DECIMAL(12,2),
    transaction_date DATE,
    FOREIGN KEY (property_id) REFERENCES Properties(property_id),
    FOREIGN KEY (buyer_id) REFERENCES Buyers(buyer_id)
);


-- 2. Inserting Sample Data:
-- Agents
INSERT INTO Agents (agent_id, name, email, phone) VALUES
(1, 'Alice Realty', 'alice@realty.com', '1111111111'),
(2, 'Bob Realtors', 'bob@realty.com', '2222222222');

-- Properties
INSERT INTO Properties (property_id, address, city, region, property_type, listed_price, listed_date, agent_id) VALUES
(1, '123 Main St', 'New York', 'East', 'Apartment', 500000, '2023-01-10', 1),
(2, '456 Park Ave', 'New York', 'East', 'House', 1200000, '2023-02-15', 1),
(3, '789 Elm St', 'Chicago', 'Midwest', 'Apartment', 350000, '2023-03-20', 2),
(4, '321 Lake Dr', 'Chicago', 'Midwest', 'House', 800000, '2023-04-12', 2),
(5, '654 Oak Rd', 'Los Angeles', 'West', 'Commercial', 2200000, '2023-05-05', 1);

-- Buyers
INSERT INTO Buyers (buyer_id, name, email, phone) VALUES
(1, 'John Smith', 'john@example.com', '9999999999'),
(2, 'Sarah Johnson', 'sarah@example.com', '8888888888'),
(3, 'Michael Brown', 'mike@example.com', '7777777777');

-- Transactions
INSERT INTO Transactions (transaction_id, property_id, buyer_id, transaction_price, transaction_date) VALUES
(1, 1, 1, 480000, '2023-05-01'),
(2, 3, 2, 340000, '2023-05-15'),
(3, 4, 3, 780000, '2023-06-01');


-- 3. Queries – Analytics, Average Price by Region
SELECT region, AVG(listed_price) AS avg_listed_price
FROM Properties
GROUP BY region;

-- Top 3 Expensive Properties
SELECT address, city, listed_price
FROM Properties
ORDER BY listed_price DESC
LIMIT 3;


-- 4. Creating Views – High Demand Areas

CREATE VIEW HighDemandAreas AS
SELECT p.city, p.region, COUNT(t.transaction_id) AS total_sales
FROM Transactions t
JOIN Properties p ON t.property_id = p.property_id
GROUP BY p.city, p.region
HAVING COUNT(t.transaction_id) > 1;

-- Test the view
SELECT * FROM HighDemandAreas;


-- 5. Reports – Window Functions, Monthly Price Trend with Rolling Average
SELECT region, 
       DATE_FORMAT(transaction_date, '%Y-%m') AS month,
       AVG(transaction_price) AS avg_price,
       AVG(AVG(transaction_price)) OVER (PARTITION BY region ORDER BY DATE_FORMAT(transaction_date, '%Y-%m')) AS rolling_avg
FROM Transactions t
JOIN Properties p ON t.property_id = p.property_id
GROUP BY region, month
ORDER BY region, month;
